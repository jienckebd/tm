<?php

/**
 * @file
 * (Un)installation functions for Views RSS: Media Elements module.
 */

use Drupal\Component\Utility\String;

/**
 * Implements hook_requirements().
 */
function views_rss_media_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    // Test getID3 version
    $requirements['getid3']['title'] = t('ID3 library');

    $library = libraries_load('getID3');
    if (!empty($library['loaded'])) {
      $requirements['getid3']['value'] = String::checkPlain($library['version']);

      // Check if demos directory exists.
      $getid3_demos_path = libraries_get_path('getID3') . '/demos';
      if (file_exists($getid3_demos_path)) {
        $requirements['getid3']['description'] = t("Your getID3 library is insecure! The demos distributed with getID3 contains code which creates a huge security hole. Remove the demos directory (%path) from beneath library's directory.", array('%path' => realpath($getid3_demos_path)));
        $requirements['getid3']['severity'] = REQUIREMENT_ERROR;
      }
    }
    // getID3 library not found or wrong version.
    else {
      $requirements['getid3']['value'] = t('Not found or wrong version');
      $requirements['getid3']['description'] = t('You must download <a href="@getid3">getID3()</a> to %getid3dir directory. You might use <em>drush getid3-download</em> command to do that.', array(
        '@getid3' => 'http://www.getid3.org',
        '%getid3dir' => 'libraries/getID3',
      ));
      $requirements['getid3']['severity'] = REQUIREMENT_ERROR;
    }
  }

  return $requirements;
}

/**
 * Implements hook_install().
 */
function views_rss_media_install() {
  \Drupal::cache('data')->invalidateTags(array('views_rss'));
}

/**
 * Implements hook_uninstall().
 */
function views_rss_media_uninstall() {
  \Drupal::cache('data')->invalidateTags(array('views_rss'));
}
