diff --git a/src/Routing/RulesUiRouteEnhancer.php b/src/Routing/RulesUiRouteEnhancer.php
index b075455..fee287a 100644
--- a/src/Routing/RulesUiRouteEnhancer.php
+++ b/src/Routing/RulesUiRouteEnhancer.php
@@ -2,11 +2,10 @@
 
 namespace Drupal\rules\Routing;
 
-use Drupal\Core\Routing\Enhancer\RouteEnhancerInterface;
+use Drupal\Core\Routing\EnhancerInterface;
 use Drupal\rules\Ui\RulesUiManagerInterface;
 use Symfony\Cmf\Component\Routing\RouteObjectInterface;
 use Symfony\Component\HttpFoundation\Request;
-use Symfony\Component\Routing\Route;
 
 /**
  * Enhances routes with the specified RulesUI.
@@ -18,7 +17,7 @@
  * - rules_component: The rules component being edited, as provided by the
  *   handler.
  */
-class RulesUiRouteEnhancer implements RouteEnhancerInterface {
+class RulesUiRouteEnhancer implements EnhancerInterface {
 
   /**
    * The rules_ui plugin manager.
@@ -43,16 +42,10 @@ public function __construct(RulesUiManagerInterface $rules_ui_manager) {
   public function enhance(array $defaults, Request $request) {
     // @var $route \Symfony\Component\Routing\Route
     $route = $defaults[RouteObjectInterface::ROUTE_OBJECT];
-    $plugin_id = $route->getOption('_rules_ui');
-    $defaults['rules_ui_handler'] = $this->rulesUiManager->createInstance($plugin_id);
+    if ($plugin_id = $route->getOption('_rules_ui')) {
+      $defaults['rules_ui_handler'] = $this->rulesUiManager->createInstance($plugin_id);
+    }
     return $defaults;
   }
 
-  /**
-   * {@inheritdoc}
-   */
-  public function applies(Route $route) {
-    return ($route->hasOption('_rules_ui'));
-  }
-
 }
